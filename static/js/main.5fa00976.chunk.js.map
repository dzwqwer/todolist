{"version":3,"sources":["store/actionTypes.js","store/reducer.js","store/index.js","store/actionCreator.js","List.js","App.js","serviceWorker.js","index.js"],"names":["ADD_TodoList","ADD_DoneList","defaultState","todoList","doneList","store","createStore","state","arguments","length","undefined","action","type","newState","JSON","parse","stringify","unshift","value","checked","check","splice","index","window","__REDUX_DEVTOOLS_EXTENSION__","addDoneList","t","deleteList","List","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","storeChange","setState","getState","handleDone","data","myRef","current","dispatch","React","createRef","subscribe","_this$props","react_default","a","createElement","ref","onChange","bind","onClick","handleClick","Component","App","addList","e","nativeEvent","keyCode","target","className","htmlFor","id","name","placeholder","required","autoComplete","onKeyDown","map","item","src_List","key","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fa00976.chunk.js","sourcesContent":["export const ADD_TodoList = 'ADD_TodoList'\r\n\r\nexport const ADD_DoneList = 'ADD_DoneList'\r\n\r\nexport const DELETE_List = 'DELETE_List'\r\n","import {ADD_TodoList, DELETE_List, ADD_DoneList} from './actionTypes';\r\nconst defaultState = {\r\n    todoList: [],\r\n    doneList: []\r\n}\r\n\r\nexport default (state=defaultState, action) =>{\r\n    if(action.type === ADD_TodoList){\r\n        let newState = JSON.parse(JSON.stringify(state));\r\n        newState.todoList.unshift({value: action.value, checked: false});\r\n        return newState;\r\n    }\r\n    if(action.type === DELETE_List){\r\n        let newState = JSON.parse(JSON.stringify(state));\r\n        if(action.check){\r\n            newState.doneList.splice(action.index, 1);\r\n            return newState;\r\n        }else{\r\n            newState.todoList.splice(action.index, 1);\r\n            return newState;\r\n        }\r\n    }\r\n    if(action.type === ADD_DoneList){\r\n        let newState = JSON.parse(JSON.stringify(state));\r\n        // newState.doneList.unshift();\r\n        if(action.check){\r\n            // console.log(action)\r\n            newState.todoList.splice(action.index, 1);\r\n            newState.doneList.unshift({value: action.value, checked: true});\r\n            return newState;\r\n        }else{\r\n            newState.doneList.splice(action.index, 1);\r\n            newState.todoList.unshift({value: action.value, checked: false});\r\n            return newState;\r\n        }\r\n    }\r\n    return state;\r\n}","import {createStore} from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","export function addTodoList(t, value){\r\n    return {\r\n        type: t,\r\n        value\r\n    }\r\n}\r\n\r\nexport function addDoneList(t, check, index, value){\r\n    return {\r\n        type: t,\r\n        check,\r\n        index,\r\n        value\r\n    }\r\n}\r\n\r\nexport function deleteList(t, check, index){\r\n    return {\r\n        type: t,\r\n        check,\r\n        index\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport store from './store';\r\nimport {DELETE_List, ADD_DoneList} from './store/actionTypes';\r\nimport {addDoneList, deleteList} from './store/actionCreator';\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\t\t\tthis.state = store.getState();\r\n\t\t\t\tthis.myRef = React.createRef();\r\n\t\t\t\tstore.subscribe(this.storeChange);\r\n\t\t}\r\n\t\tstoreChange= () => {\r\n\t\t\tthis.setState(store.getState());\r\n\t\t}\r\n\t\thandleClick(index){\r\n\t\t\tlet check;\r\n\t\t\tif(this.myRef.current.checked === false){\r\n\t\t\t\tcheck = false;\r\n\t\t\t\tstore.dispatch(deleteList(DELETE_List, check, index));\r\n\t\t\t}else if(this.myRef.current.checked === true){\r\n\t\t\t\tcheck = true;\r\n\t\t\t\tstore.dispatch(deleteList(DELETE_List, check, index));\r\n\t\t\t}\r\n\t\t}\r\n\t\thandleDone= (index) => {\r\n\t\t\tconst {data} = this.props;\r\n\t\t\t// console.log(data)\r\n\t\t\t// console.log(this.myRef.current)\r\n\t\t\tlet check;\r\n\t\t\tif(this.myRef.current.checked === true){\r\n\t\t\t\tcheck = true;\r\n\t\t\t\tstore.dispatch(addDoneList(ADD_DoneList, check, index, data.value));\r\n\t\t\t}else if(this.myRef.current.checked === false){\r\n\t\t\t\tcheck = false;\r\n\t\t\t\tstore.dispatch(addDoneList(ADD_DoneList, check, index, data.value));\r\n\t\t\t}\r\n\t\t}\r\n    render() {\r\n\t\t\tconst { data, index} = this.props; \r\n\t\t\treturn ( \r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<input ref={this.myRef} checked={data.checked} type='checkbox' onChange={this.handleDone.bind(this, index)}/>\r\n\t\t\t\t\t\t\t<p>{data.value}</p>\r\n\t\t\t\t\t\t\t<span onClick={this.handleClick.bind(this, index)}>-</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n  }\r\n}\r\n \r\nexport default List;","import React from 'react';\nimport './App.css';\nimport List from './List'\nimport store from './store';\nimport {ADD_TodoList} from './store/actionTypes';\nimport {addTodoList} from './store/actionCreator';\n\nclass App extends React.Component {\n  constructor(props){\n    super();\n    this.state = store.getState();\n    store.subscribe(this.storeChange);\n  }\n  storeChange= () => {\n    this.setState(store.getState());\n  }\n  addList= (e) =>{\n    if(e.nativeEvent.keyCode === 13 && e.target.value){\n      store.dispatch(addTodoList(ADD_TodoList, e.target.value));\n      e.target.value = '';\n    }\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <label htmlFor=\"title\">ToDoList</label>\n            <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"添加ToDo\" required=\"required\" autoComplete=\"off\" onKeyDown={this.addList}/>\n          </div>\n        </header>\n        <section>\n          <h2>\n            正在进行\n            <span>{this.state.todoList.length}</span>\n          </h2>\n          {\n            this.state.todoList.map((item, index) => <List data={item} key={index} index={index}/>)\n          }\n          <h2>\n            已经完成\n            <span>{this.state.doneList.length}</span>\n          </h2>\n          {\n            this.state.doneList.map((item, index) => <List data={item} key={index} index={index}/>)\n          }\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}